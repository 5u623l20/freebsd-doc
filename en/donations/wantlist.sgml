<!DOCTYPE HTML PUBLIC "-//FreeBSD//DTD HTML 4.01 Transitional-Based Extension//EN" [
<!ENTITY base CDATA "..">
<!ENTITY date "$FreeBSD: www/en/donations/wantlist.sgml,v 1.459 2008/06/04 04:03:08 marcel Exp $">
<!ENTITY title "FreeBSD Developers Want List">
<!ENTITY email 'donations'>
<!ENTITY % navinclude.about "INCLUDE">
]>
<html>
  &header;

    <p>This page lists various developer hardware needs.  If you are
      interested in supporting the FreeBSD Project, you might consider
      donating some piece of hardware on this list to the Project.</p>

    <p>We provide the FreeBSD username of the developer who needs a
      resource, the country they are in (for shipping purposes), the
      equipment they desire, and the use to which that equipment will
      be put.</p>

    <p>For information on tax deductions and process, please see the
      information on the main <a href="index.html#donating">FreeBSD
      Donation Liaison office</a> page.</p>

    <p>If you would like to donate something on this list, please
      contact donations@FreeBSD.org.</p>

    <p>On a general note, we need a variety of Sparc64 machines for
      testing and improving our Sparc port.  Even small, old (or
      new!) Sparc64 machines are perfectly usable.  No matter which
      country you're in, we almost certainly have someone local who
      could use it.  We could specifically use 1U rack-mounted Sparcs
      (such as E220R, E420R, Fire V100, Fire V120, or Netra T1 AC200)
      for our development and package-building clusters in the
      USA.</p>

    <table class="tblbasic">
      <tr>
	<th>Developer ID</th>
	<th>Developer Country</th>
	<th>Equipment Desired</th>
	<th>Equipment Use</th>
      </tr>

      <tr>
	<td>ade</td>
	<td>Oregon, USA</td>
	<td>dual Opteron or EM64T capable Xeon, 2 or 4GB, working gigE,
	  4*73GB (preferably SCSI but SATA is ok)</td>
	<td>fast box to run some heavy-duty ports infrastructure grunt work
	  on i386 and amd64 including, but not limited to, an SQL-backended
	  replacement for the current package building system testmachines.
	  I'm willing to offer up a couple of mini-ITX systems (one Athlon-XP
	  2700+, 1G, 160GB SATA, gigE, the other an Athlon64-2800+, 1G, 160GB
	  SATA, gigE, in return).</td>
      </tr>

      <tr>
	<td>cognet</td>
	<td>France</td>
	<td>A Zaurus, with hard disk preferably.</td>
	<td>FreeBSD/arm development.</td>
      </tr>

      <tr>
	<td>delphij</td>
	<td>Mountain View, CA, USA</td>
	<td>A SMP desktop computer or laptop which is suitable for at-home
	  development.  AMD64/EM64T capable system preferred; dual-core
	  (not HTT) is ok.</td>
	<td>General FreeBSD kernel/userland development/testing.</td>
      </tr>

      <tr>
	<td>des</td>
	<td>Norway</td>
	<td>Mac Mini with 1 GB RAM, no peripherals</td>
	<td>Tinderbox.</td>
      </tr>

      <tr>
	<td>des</td>
	<td>Norway</td>
	<td>Opteron CPU</td>
	<td>Populate a CPU-less motherboard.</td>
      </tr>

      <tr>
	<td>des</td>
	<td>Norway</td>
	<td>Any USB device based on the Cypress CY7C637xx /
	  CY7C640/1xx USB to RS232 bridge chip.</td>
	<td>Improve the ucycom driver.</td>
      </tr>

      <tr>
	<td>dfr</td>
	<td>UK</td>
	<td>Firewire bus analyzer, 1394b is preferable but 1394a is
	  acceptable.</td>
	<td>Debug and improve the performance of firewire, especially
	  IP over firewire.</td>
      </tr>

      <tr>
	<td>grehan</td>
	<td>California, USA</td>
	<td>Apple G4 XServe</td>
	<td>Rackmount PowerPC machine for developer cluster.</td>
      </tr>

      <tr>
	<td>imp</td>
	<td>USA</td>
	<td>EISA-based pccard hardware</td>
	<td>Make EISA pccard driver work.</td>
      </tr>

      <tr>
	<td>imp</td>
	<td>USA</td>
	<td>3Com Xjack wireless card</td>
	<td>Make driver work.</td>
      </tr>

      <tr>
	<td>jake</td>
	<td>Canada</td>
	<td>2 450MHz UltraSPARC II CPUs</td>
	<td>Faster sparc64 test machine.</td>
      </tr>

      <tr>
	<td>jake</td>
	<td>Canada</td>
	<td>Sun server or workstation with UltraSPARCIII CPUs, Blade
	  1000, Blade 2000, V280R, V480 or V880, preferably with 2
	  CPUs</td>
	<td>Sparc64 UltraSPARCIII support.</td>
      </tr>

      <tr>
	<td>jcamou</td>
	<td>AZ, USA.</td>
	<td>Gigabit switch</td>
	<td>Development/build cluster.  Any kind of switch could
	  work.</td>
      </tr>

      <tr>
	<td>jmg</td>
	<td>California, USA</td>
	<td>Fast multiprocessor AMD64 capable machine (dual core CPU ok).</td>
	<td>General build box to support FreeBSD work including ARM and
	  multi-arch testing of patches.</td>
      </tr>

      <tr>
	<td>johan</td>
	<td>Sweden</td>
	<td>17++ inch TFT monitor with both D-Sub and DVI-D connections.</td>
	<td>My current monitor is starting to give up.</td>
      </tr>
      
      <tr>
	<td>jwd</td>
	<td>USA, North Carolina</td>
	<td>Cyclades TS800/1000 (or equivalent)</td>
	<td>Serial consoles for all hardware in the rtp.FreeBSD.org cluster.</td>
      </tr>

      <tr>
	<td>lioux</td>
	<td>Brazil</td>
	<td>Network switch
	  10/100 Mbits.  Network card Intel EtherExpress PCI 10/100
	  Mbits</td>
	<td>Get a K6 based machine back online and add it as an
	  extra terminal to FreeBSD home LAN.</td>
      </tr>

      <tr>
	<td>lioux</td>
	<td>Brazil</td>
	<td>Books on any of the following subjects: network
	  protocol scheduling (bandwidth/transmission efficiency),
	  process scheduling, scheduling theory in general, digesting
	  (checksums, particularly fine grained checksumming for
	  detection partial file corruption;  e.g., tiger trees,
	  sha1 trees), corruption detection and recovery (files,
	  network protocol, etc), distributed processing (localization
	  transparency, migration, redundancy, repartition, scheduling,
	  message passing, shared memory, etc), peer to peer
	  technology, device driver writing and operational system
	  theory</td>
	<td>Improve my knowledge regarding operational systems and
	  modern computer science challenges/technologies.  For
	  example, I want to write an improved downloading mechanism
	  for FreeBSD distribution (ports and base) that supports
	  graceful corruption detection/recovery, FTP/HTTP/other/it's
	  own protocol, multi-part download, multi-server support,
	  load distribution.  Not all at once but in the long term.
	  Most of this knowledge will be reverted to FreeBSD if I
	  can.</td>
      </tr>

      <tr>
	<td>lioux</td>
	<td>Brazil</td>
	<td>BrookTree chipset TV Capture Card: either BT848 or BT878
	  (preferred) that already works with FreeBSD.</td>
	<td>Adding BrookTree support to graphics/ffmpeg and several
	  other video processing programs.</td>
      </tr>

      <tr>
	<td>marcel</td>
	<td>CA, USA</td>
	<td>1GB of low-profile PC133 SDRAM (168pin DIMM). Memory can be
	  buffered or unbuffered. preferrably one 1GB DIMM or two 512MB
	  DIMMs. Low-profile is a must. ECC is optional.</td>
	<td>More memory allows for better workloads when testing code in
	  SMP setups.</td>
      </tr>

      <tr>
	<td>markm</td>
	<td>Cambridge, UK</td>
	<td>Flexelint v8. (www.gimpel.com)</td>
	<td>(Semi-)automated code cleaning and cross-platform compiler needs
	  cleaning.</td>
      </tr>

      <tr>
	<td>marks</td>
	<td>The Netherlands</td>
	<td>ACPI laptops (also for lend)</td>
	<td>(1) ACPI laptops that work, to test new code on.<br>
         (2) ACPI laptops that don't work, (to try) to fix.</td>
      </tr>

      <tr>
	<td>markus</td>
	<td>Germany</td>
	<td>IBM ThinkPad Dock II</td>
	<td>(1) Enhance the acpi_ibm(4) driver.<br>
	 (2) Enhance docking support.</td>
      </tr>

      <tr>
	<td>matusita</td>
	<td>Japan</td>
	<td>2-3 build machines:Pentium4 2GHz+,20GB+ ATA66+
	  HDD,256MB+RAM, 100base-TX NIC,serial, etc.</td>
	<td>Rebuild dying snapshots.jp.FreeBSD.org.</td>
      </tr>

      <tr>
	<td>matusita</td>
	<td>Japan</td>
	<td>FTP server:Pentium3/Celeron 1GHz+,10GB+ ATA66+ HDD,100GB+
	  storage (RAID0+1 desirable),256MB+RAM, 100base-TX
	  NIC,serial, etc.</td>
	<td>Rebuild dying snapshots.jp.FreeBSD.org.</td>
      </tr>

      <tr>
	<td>mbr</td>
	<td>Switzerland</td>
	<td>Network cards for RealTek 8129/8139 and clones,
	 DEC/Intel 21143 and workalikes, SiS 900/7016 and clones,
	 NatSemi DP83815/DP83820 and workalikes. I can give feedback
	 if I still need the card. Fixed cards will go to the busdma
	 project.</td>
	<td>Add support for unsupported and broken drivers.</td>
      </tr>

      <tr>
	<td>mikeh</td>
	<td>VA, USA</td>

	<td>Cordless PS/2 keyboards/mice (especially <a
	  href="http://www.gyration.com/products.htm">Gyration</a> and
	  <a
	  href="http://www.microsoft.com/hardware/keyboard/default.asp">Microsoft
	  wireless desktop</a> products), or any other PS/2 keyboard
	  mice, and KVM products that are not supported by
	  FreeBSD.</td>
	<td>Improve PS/2 mouse/keyboard support in FreeBSD.</td>
      </tr>

      <tr>
	<td>mux</td>
	<td>France</td>
	<td>Network cards listed on <a
	  href="http://www.FreeBSD.org/projects/busdma/">busdma
	  project</a> page.</td>
	<td>Busdma conversion of network cards.<td>
      </tr>

      <tr>
	<td>mux</td>
	<td>France</td>
	<td>Relatively recent laptop with serial port</td>
	<td>Live kernel debugging.</td>
      </tr>

      <tr>
	<td>obrien</td>
	<td>Silicon Valley, USA</td>
	<td>AlphaServer DS15.</td>
	<td>continued FreeBSD/alpha development and testing.</td>
      </tr>

      <tr>
	<td>obrien</td>
	<td>Silicon Valley, USA</td>
	<td>1U or 2U rack-mount cases, with power supplies. </td>
	<td>Build into AMD64 reference machines for the FreeBSD.org
	    cluster.</td>
      </tr>

      <tr>
	<td>peter</td>
	<td>California, USA</td>
	<td>Rack mount AMD64 Opteron system.</td>
	<td>To make available on the developer cluster. </td>
      </tr>

      <tr>
	<td>phantom</td>
	<td>Germany/Ukraine</td>
	<td>Reasonably fast SMP machine</td>
	<td>Improve scalability of JDK.</td>
      </tr>
      
      <tr>
	<td>phk</td>
	<td>Denmark</td>
	<td>
	    IEEE-488 controller cards different than PCIIA, preferably
	    PCI bus.
	</td>
	<td>
	    I have started on rudimentary IEEE-488/GP-IB/HP-IB support
	    but I only have access to an ISAN PCIIA controller.
	</td>
      </tr>

      <tr>
	<td>rpaulo</td>
	<td>Portugal</td>
	<td>
	    IBM ThinkPad T4x laptop.
	</td>
	<td>
	    General FreeBSD kernel/userland development/testing.
	</td>
      </tr>

      <tr>
	<td>sam</td>
	<td>USA</td>
	<td>crypto devices (pci, pcmcia, cardbus cards,
	    CPUs with builtin crypto support)</td>
	<td>For improving hardware crypto support.</td>
      </tr>

      <tr>
	<td>shaun</td>
	<td>United Kingdom</td>
	<td>UltraSPARC/PPC based laptop(s) (not too antiquated),
	  complete or partial amd64 (or ia64?) system (something
	  reasonably beefy), a Soekris 1401 or 1461 crypto accelerator,
	  Cisco WIC-1ADSL card.</td>
	<td>Replace various dying or old bits of hardware; make my
	  time a little more productive; expand development work on
	  non-i386 architectures.</td>
      </tr>

      <tr>
	<td>simon / cperciva</td>
	<td>Ontario, Canada</td>
	<td>Fast 1U rack mountable server.  Preferably 4 cores, 2GB
	  RAM, 2 x 36GB+ disks, decent hardware RAID controller for
	  RAID1, 100Mbit NIC, and not too electrical power
	  hungry.</td>
        <td>Faster portsnap build system to reduce time between
	  portsnap builds and to introduce more redundancy in portsnap
	  to reduce downtime in case one build server fails.</td>
      </tr>

      <tr>
	<td>simon</td>
	<td>Denmark</td>
	<td>12 port Remote Power Controller 220V 10A with serial or
	  Ethernet connection.	It does not have to be one big power
	  controller and fewer than 12 ports can certainly also be a
	  good start.</td>
	<td>Being able to remote power cycle servers hosted at home,
	  including <tt>tb3 / tb4.droso.net</tt> and all the
	  assosiated network equipment.</td>
      </tr>

      <tr>
	<td>simon</td>
	<td>Denmark</td>
	<td>1KW - 1.5KW APC Smart-UPS or similar</td>
	<td>Being able to have all local systems (including
	  tb[345].droso.net) turned on without current UPS complaining
	  about overload.</td>
      </tr>

      <tr>
	<td>simon</td>
	<td>Denmark</td>
	<td>8 port serial console server.</td>
	<td>Being able to remote manage servers hosted at home better,
	  including <tt>tb3 / tb4.droso.net</tt>.</td>
      </tr>

      <tr>
	<td>simon</td>
	<td>Denmark</td>
	<td>Dual Opteron server motherboard which supports Opteron
	   875 CPU's, 2GB ECC RAM, 2xSATA disks (RAID1)</td>
	<td>Replacement hardware for trillian.nitro.dk / tb3.droso.net
	  (it is currently running on my workstation) which is a
	  system I host where all FreeBSD committers can get an
	  account.  It is mainly used by ports developers for testing,
	  but is also used by multiple <a
	    href="http://wiki.freebsd.org/SummerOfCode2006">SoC
	    2006</a> students.</td>
      </tr>

      <tr>
	<td>sos</td>
	<td>Denmark</td>
	<td>Serial ATA hardware: disks, controllers (including docs),
	  cables, Serial ATA-ATA converters.</td>
	<td>Keep ATA support up to date.</td>
      </tr>

      <tr>
	<td>tanimura</td>
	<td>Japan</td>
	<td>Any Japanese laptop (Preferably IBM Thinkpad A30 or A31).</td>
	<td>Replace a recently stolen IBM.</td>
      </tr>

      <tr>
	<td>thierry</td>
	<td>France, but to be sent to Colombia</td>
	<td>A 128 MB RAM Module (Kingston KSY-F250/128 or equiv.),
	  a replacement IDE HDD (4GB or more) for a laptop and a working
	  battery (or 2) for a SONY VAIO PCG-F250 would be really nice.</td>
	<td>Pedro F. Giffuni's main dev. machine has been stolen;
	  this hardware would permit to refurbish his laptop and let him
	  maintain and develop ports (mainly cad / math / science).</td>
      </tr>

      <tr>
	<td>thomas</td>
	<td>France</td>
	<td>UDMA controller, ATAPI floppy drive, ATAPI tape drive</td>
	<td>Ensure these ATAPI devices work with ATAPI/CAM with the
	  same level of functionality currently available with the
	  afd/ast drivers.</td>
      </tr>

    </table>

  &footer;
  </body>
</html>
