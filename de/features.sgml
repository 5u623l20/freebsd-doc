<!DOCTYPE HTML PUBLIC "-//FreeBSD//DTD HTML 4.01 Transitional-Based Extension//EN" [
<!ENTITY date "$FreeBSD$">
<!ENTITY dedate "$FreeBSDde: de-www/features.sgml,v 1.16 2007/09/26 10:08:01 jkois Exp $">
<!ENTITY reference "basiert auf: 1.29">
<!ENTITY title "Die technischen Fortschritte von FreeBSD">
<!ENTITY % navinclude.about "INCLUDE">
]>

<html>
    &header;

    <h2>FreeBSD bietet viele hochentwickelte Funktionalit&auml;ten.</h2>

      <p>Unabh&auml;ngig von der Anwendung m&ouml;chten Sie Ihr System
	optimal ausnutzen. Die hochentwickelten Funktionalit&auml;ten von
	FreeBSD geben Ihnen die M&ouml;glichkeit dazu.</p>

    <h2>Ein komplettes Betriebssystem, basierend auf 4.4BSD.</h2>

      <p>FreeBSD hat seine Urspr&uuml;nge in den letzten Versionen
	der <b>BSD</b>-Software, welche von der Computer Systems
	Research Group an der Universit&auml;t von Californien, Berkeley,
	ver&ouml;ffentlicht wurden. Das Buch <i>The Design and
	Implementierung of the 4.4BSD Operating System</i>, geschrieben
	von den 4.4BSD-System-Architekten, beschreibt daher
	ausf&uuml;hrlich einen grossen Teil der grundlegenden
	Funktionen von FreeBSD.</p>

      <p>Basierend auf den F&auml;higkeiten und Erfahrungen einer
	vielf&auml;ltigen und weltweit verteilten Gruppe freiwilliger
	Entwickler hat das FreeBSD-Projekt die Funktionen des 4.4BSD
	Betriebssystemes stark erweitert. Das Ziel jeder neuen Version
	ist ein stabileres und schnelleres Betriebssystem, welches
	neue, von Benutzern vorgeschlagene, Funktionalit&auml;ten
	enth&auml;lt.</p>

    <h2>FreeBSD bietet h&ouml;chste Leistung, bessere
      Kompatibilit&auml;t zu anderen Betriebssystemen und weniger
      Aufwand bei der Systemadministration.</h2>

      <p>Die Entwickler von FreeBSD haben einige der sehr schwierigen
	Probleme des Betriebssystem-Designs in Angriff genommen,
	um Ihnen die folgenden, hochentwickelten Funktionalit&auml;ten
	anzubieten:</p>

      <ul>
	<li><b>Ein Puffer-Cache, der gemeinsam vom Dateisystem und
	  virtuellen Speicher genutzt wird,</b> regelt kontinuierlich
	  den Speicherplatz von Programmen und dem Festplatten-Cache.
	  Daher profitieren Anwendungen gleichzeitig von der
	  ausgezeichneten Speicherverwaltung und den schnellen
	  Festplattenzugriffen. F&uuml;r den Systemadministrator
	  entf&auml;llt das Optimieren der Cache-Gr&ouml;ssen.</li>

	<li><b>Kompatibilit&auml;ts-Module</b> erlauben die
	  Ausf&uuml;hrung von Anwendungen unter FreeBSD, welche
	  eigentlich f&uuml;r andere Betriebsysteme, wie z.B.
	  Linux, SCO UNIX und System&nbsp;V Release&nbsp;4,
	  geschrieben wurden.</li>

	<li><b>Soft Updates</b> steigern die Leistung von Dateisystemen,
	  ohne dabei die Sicherheit und Zuverl&auml;ssigkeit zu
	  beeintr&auml;chtigen. Dazu werden Operationen auf
	  Dateisystem-Metadaten analysiert, damit diese nicht mehr
	  synchron abgearbeitet werden m&uuml;ssen. Stattdessen werden
	  noch ausstehende Operationen in einem Puffer
	  zwischengespeichert. Diese werden dann durch Zusammenfassen
	  mehrerer Operationen auf dieselbe Datei, sowie einer
	  effektiveren Gestaltung der Abarbeitungsreihenfolge,
	  optimiert. Funktionen wie die &Uuml;berpr&uuml;fung des
	  Dateisystems im Hintergrund, und Schnappsch&uuml;sse
	  (Snapshots) eines Dateisystems, basieren auf der
	  Beschaffenheit und Geschwindigkeit von Soft Updates.</li>

	<li><b>Dateisystem Snapshots</b> erm&ouml;glichen dem
	  Administrator atomare Schnappsch&uuml;sse eines Dateisystems
	  als Backup zu erstellen, indem der freie Speicherplatz
	  verwendet wird. <b>Im Hintergrund ausgef&uuml;hrte
	  &Uuml;berpr&uuml;fungen des Dateisystems</b> erm&ouml;glichen
	  es einem System, im Mehrbenutzerbetrieb zu laufen, ohne auf
	  die Beendigung eventueller Korrekturen am Dateisystem warten
	  zu m&uuml;ssen.</li>

	<li><b>Unterst&uuml;tzung f&uuml;r IPsec und IPv6</b> bieten
	  eine h&ouml;here Netzwerksicherheit und das
	  Internet-Protokoll der n&auml;chsten Generation. Die
	  Implementierung von IPsec in FreeBSD beinhaltet auch die
	  Unterst&uuml;tzung einer breiten Menge an Hardware, die
	  <b>kryptographische Verschl&uuml;sselungen
	  beschleunigt</b>.</li>

	<li><b>Hervorragende Unterst&uuml;tzung von IPv6</b> mittels
	  des KAME IPv6 Stacks erm&ouml;glicht eine nahtlose Integration
	  von FreeBSD in Netzwerkumgebungen der n&auml;chsten
	  Generation. Unter FreeBSD sind bereits Anwendungen
	  verf&uuml;gbar, welche um eine Unterst&uuml;tzung von IPv6
	  erweitert wurden!</li>

	<li><b>Multi-threaded SMP Architektur</b>, die eine parallele
	  Ausf&uuml;hrung des Kernels auf mehreren Prozessoren
	  erlaubt, sowie <b>Pr&auml;emption des Kernels</b>, welche es
	  einem Prozess mit hoher Priorit&auml;t erlaubt, andere
	  Aktivit&auml;ten des Kernels zu unterbrechen, und so
	  effektiv die Latenzzeit zu reduzieren. Dies beinhaltet auch
	  einen <b>Multi-Threaded Netzwerkstack</b>, sowie ein
	  <b>virtuelles, multi-threaded Speichersubsystem</b>. Mit
	  FreeBSD 6.x steht die Unterst&uuml;tzung eines
	  vollst&auml;ndig parallelen VFS zur Verf&uuml;gung, welches
	  es dem UFS Dateisystem erlaubt, gleichzeitig mehrere
	  Prozessoren zu bedienen, und die Lastverteilung
	  rechenintensiver I/O-Operationen zu optimieren.</li>

	<li><b>M:N Threading via pthreads</b> erlaubt eine skalierbare
	  Ausf&uuml;hrung von Threads auf mehreren CPUs, indem viele
	  Benutzer-Threads auf eine kleine Anzahl von
	  <b>Kernelentit&auml;ten</b> verteilt werden. Durch die
	  &Uuml;bernahme des <b>Scheduler Activation</b>-Models kann
	  das Threading an spezielle Anforderungen einer breiten
	  Masse an Anwendungen angepasst werden.
	</li>

	<li><b>Netgraphs erweiterbarer Netzwerkstack</b> erlaubt
	  Entwicklern, diesen dynamisch und einfach &uuml;ber saubere
	  Abstraktionsschichten zu erweitern. Netgraph-Knoten
	  k&ouml;nnen eine breite Masse an Netzwerkdiensten, unter
	  anderem Kapselung, Tunnelung, Verschl&uuml;sselung sowie
	  Performanceanpassung, ausf&uuml;hren. Dadurch ist eine
	  schnelle Entwicklung von Prototypen, und ein schnellerer
	  produktiver Einsatz von erweiterten Netzwerkdiensten
	  einfacher und fehlerfreier m&ouml;glich.
	</li>

	<li><b>Erweiterbare Kernel-Sicherheit des TrustedBSD MAC
	  Framworks</b> erlm&ouml;glicht Entwicklern eine Anpassung des
	  Betriebsystems an spezielle Umgebungen, vom Einrichten
	  restriktiver Richtlinien bis hin zu vorgeschriebenen
	  Verhaltensregeln zur Vertraulichkeit. Die
	  Sicherheitsrichtlinien beinhalten <b>Multi-Level Security
	  (MLS)</b>, sowie <b>Biba Integrety Protection</b>.
	  Zus&auml;tzliche Module beinhalten <b>SEBSD</b>, eine
	  FLASK-basierte Implementierung von <b>Type
	  Enforcement</b>.</li>

	<li><b>GEOMs erweiterbare Speicherschicht</b> erlaubt eine
	  schnelle Entwicklung und nahtlose Integration neuer
	  Speicherdienste in das FreeBSD Speicher-Subsystem. GEOM
	  bietet ein einheitliches und zusammenh&auml;ngendes Model,
	  um Speicherdienste zu erkennen und bereitzustellen, so
	  dass Dienste wie RAID und Volume Management
	  einfach abstrahiert werden k&ouml;nnen.</li>

	<li>FreeBSDs <b>GEOM-basierte Festplattenverschl&uuml;sselung
	  (GBDE)</b> bietet unter Verwendung des GEOM Frameworks
	  starken kryptographischen Schutz, und kann Dateisysteme,
	  Auslagerungsger&auml;te und andere Datenspeichermedien
	  verwenden.</li>

	<li><b>Kernel-Queues</b> erm&ouml;glichen es Anwendungen,
	  effizienter auf asynchrone Ereignisse, wie I/O-Operationen
	  auf Dateien und Sockets, zu reagieren, und dadurch die
	  Leistungsf&auml;higkeit der Anwendungen und des Systems
	  zu verbessern.</li>

	<li><b>Accept-Filter</b> erlauben verbindungsintensiven
	  Anwendungen, wie z.B. Webservern, Teile ihrer Funktionen
	  sauber in den Betriebsystemkern auszulagern, und so deren
	  Leistungsf&auml;higkeit zu steigern.</li>
      </ul>

    <h2>FreeBSD bietet viele Sicherheitsmerkmale, um Netzwerke und
      Server abzusichern.</h2>

      <p>Den FreeBSD-Entwicklern bedeutet Sicherheit genauso viel,
	wie Geschwindigkeit und Stabilit&auml;t. FreeBSDs Kernel
	bietet Unterst&uuml;tzung f&uuml;r <b>Stateful IP-Firewalling</b>,
	sowie <b>IP Proxy Gateways</b>, <b>Access Control Lists</b>,
	<b>Mandatory Access Control</b>, <b>Jail-basiertes virtuelles
	Hosting</b> und <b>kryptographisch gesicherte Datenspeicher</b>.
	Diese Funktionalit&auml;ten erlauben hochsicheres Hosting
	f&uuml;r mehrere, sich gegenseitig nicht vertrauende Kunden
	oder Konsumenten, eine strenge Aufteilung von Netzwerken,
	sowie den Aufbau sicherer Pipelines zur Geheimhaltung und
	Kontrolle von Informationsfluss.</p>

      <p>FreeBSD bietet unter anderem Verschl&uuml;sselungswerkzeuge,
	sichere Shells, Kerberos-Authentifizierung,
	"virtuelle Server" durch die Verwendung von Jails, den Betrieb
	von Diensten in chroot-Umgebungen, um den Zugang der Dienste
	zum Dateisystem einzuschr&auml;ken, Secure RPCs sowie
	Zugriffslisten f&uuml;r Dienste, die TCP-Wrapper
	unterst&uuml;tzen.</p>

      &footer;
  </body>
</html>

<!--
     Local Variables:
     mode: sgml
     sgml-indent-data: t
     sgml-omittag: nil
     sgml-always-quote-attributes: t
     End:
-->
